From e454ea9088850ce614d1795f33a6195c96f86612 Mon Sep 17 00:00:00 2001
From: Dimitry Ishenko <dimitry.ishenko@gmail.com>
Date: Tue, 10 Sep 2024 17:52:07 -0400
Subject: [PATCH 2/4] Use fontconfig on Linux to find the font

---
 src/core/diagnostics/osd_graph.cpp | 20 +++++++++++++++++---
 1 file changed, 17 insertions(+), 3 deletions(-)

diff --git a/src/core/diagnostics/osd_graph.cpp b/src/core/diagnostics/osd_graph.cpp
index aac1a46db..758dfcce7 100644
--- a/src/core/diagnostics/osd_graph.cpp
+++ b/src/core/diagnostics/osd_graph.cpp
@@ -39,12 +39,15 @@
 #include <GL/glew.h>
 
 #include <atomic>
+#include <cstdio>
+#include <filesystem>
 #include <list>
 #include <memory>
 #include <mutex>
 #include <optional>
 #include <thread>
-#include <tuple>
+
+namespace fs = std::filesystem;
 
 namespace caspar { namespace core { namespace diagnostics { namespace osd {
 
@@ -62,11 +65,22 @@ sf::Color get_sfml_color(int color)
             static_cast<sf::Uint8>(color >> 0 & 255)};
 }
 
-sf::Font& get_default_font()
+auto& get_default_font()
 {
     static sf::Font DEFAULT_FONT = []() {
+        fs::path path{DIAG_FONT_PATH};
+#ifdef __linux__
+        if (!fs::exists(path)) {
+            auto cmd = "fc-match --format=%{file} " + path.string();
+            if (auto pipe = popen(cmd.data(), "r")) {
+                char buf[128];
+                path.clear();
+                while (fgets(buf, sizeof(buf), pipe)) path += buf;
+            }
+        }
+#endif
         sf::Font font;
-        if (!font.loadFromFile(DIAG_FONT_PATH))
+        if (!font.loadFromFile(path.string()))
             CASPAR_THROW_EXCEPTION(file_not_found() << msg_info(DIAG_FONT_PATH " not found"));
         return font;
     }();
-- 
2.43.0

